{"ast":null,"code":"// import React from \"react\";\n// import { Bar } from \"react-chartjs-2\";\n// import { Chart, registerables } from \"chart.js\";\n// import { useLocation, useParams } from \"react-router-dom\";\n// import \"../css/chart.css\";\n\n// Chart.register(...registerables);\n\n// const ScoreChart = () => {\n//   const type = sessionStorage.getItem(\"mem_type\");\n//   const mem_id = sessionStorage.getItem(\"mem_id\");\n//   const mem_name = sessionStorage.getItem(\"mem_name\");\n\n//   const { studentId } = useParams();\n//   const location = useLocation();\n//   const score = location.state?.score || null;\n//   const studentName = location.state?.studentName || \"학생\";\n\n//   const studentsData = {\n//     [studentId]: [\n//       { date: \"20240101\", score: 85 },\n//       { date: \"20240201\", score: 90 },\n//       { date: new Date().toISOString().split(\"T\")[0], score },\n//     ],\n//   };\n\n//   const data = studentsData[studentId] || [];\n\n//   // 평균 점수 계산\n//   const averageScore =\n//     data.reduce((sum, item) => sum + item.score, 0) / data.length;\n\n//   const chartIn = {\n//     labels: data.map((item) => item.date),\n//     datasets: [\n//       {\n//         label: \"점수\",\n//         data: data.map((item) => item.score),\n//         backgroundColor: \"#239aff\",\n//         borderColor: \"#239aff\",\n//         borderWidth: 2,\n//       },\n//     ],\n//   };\n\n//   const options = {\n//     scales: {\n//       x: {\n//         ticks: {\n//           maxRotation: 0,\n//           minRotation: 0,\n//           font: {\n//             size: 14,\n//           },\n//           color: \"#239aff\",\n//         },\n//       },\n//       y: {\n//         beginAtZero: true,\n//         max: 100,\n//       },\n//     },\n//     maintainAspectRatio: true,\n//   };\n\n//   return (\n//     <div>\n//       <div>\n//         <h2 className=\"chart-title\">·{studentName} 학생 성적 보기</h2>\n//         <br></br>\n//         <div className=\"chart-box\">\n//           <div className=\"chart\">\n//             <Bar data={chartIn} options={options} />\n//             <h3 className=\"chart-h3\">평균 점수: {averageScore.toFixed(2)}</h3>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ScoreChart;","map":{"version":3,"names":[],"sources":["C:/Users/smhrd/Documents/GitHub/react/eduwords/eduwords/src/Component/Chart.jsx"],"sourcesContent":["// import React from \"react\";\r\n// import { Bar } from \"react-chartjs-2\";\r\n// import { Chart, registerables } from \"chart.js\";\r\n// import { useLocation, useParams } from \"react-router-dom\";\r\n// import \"../css/chart.css\";\r\n\r\n// Chart.register(...registerables);\r\n\r\n// const ScoreChart = () => {\r\n//   const type = sessionStorage.getItem(\"mem_type\");\r\n//   const mem_id = sessionStorage.getItem(\"mem_id\");\r\n//   const mem_name = sessionStorage.getItem(\"mem_name\");\r\n\r\n//   const { studentId } = useParams();\r\n//   const location = useLocation();\r\n//   const score = location.state?.score || null;\r\n//   const studentName = location.state?.studentName || \"학생\";\r\n\r\n//   const studentsData = {\r\n//     [studentId]: [\r\n//       { date: \"20240101\", score: 85 },\r\n//       { date: \"20240201\", score: 90 },\r\n//       { date: new Date().toISOString().split(\"T\")[0], score },\r\n//     ],\r\n//   };\r\n\r\n//   const data = studentsData[studentId] || [];\r\n\r\n//   // 평균 점수 계산\r\n//   const averageScore =\r\n//     data.reduce((sum, item) => sum + item.score, 0) / data.length;\r\n\r\n//   const chartIn = {\r\n//     labels: data.map((item) => item.date),\r\n//     datasets: [\r\n//       {\r\n//         label: \"점수\",\r\n//         data: data.map((item) => item.score),\r\n//         backgroundColor: \"#239aff\",\r\n//         borderColor: \"#239aff\",\r\n//         borderWidth: 2,\r\n//       },\r\n//     ],\r\n//   };\r\n\r\n//   const options = {\r\n//     scales: {\r\n//       x: {\r\n//         ticks: {\r\n//           maxRotation: 0,\r\n//           minRotation: 0,\r\n//           font: {\r\n//             size: 14,\r\n//           },\r\n//           color: \"#239aff\",\r\n//         },\r\n//       },\r\n//       y: {\r\n//         beginAtZero: true,\r\n//         max: 100,\r\n//       },\r\n//     },\r\n//     maintainAspectRatio: true,\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <div>\r\n//         <h2 className=\"chart-title\">·{studentName} 학생 성적 보기</h2>\r\n//         <br></br>\r\n//         <div className=\"chart-box\">\r\n//           <div className=\"chart\">\r\n//             <Bar data={chartIn} options={options} />\r\n//             <h3 className=\"chart-h3\">평균 점수: {averageScore.toFixed(2)}</h3>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ScoreChart;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
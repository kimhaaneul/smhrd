{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\smhrd\\\\Documents\\\\GitHub\\\\react\\\\eduwords\\\\eduwords\\\\src\\\\js\\\\testpaper.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"../css/testpaper.css\";\nimport Navbar from \"../Component/Navbar\";\nimport NavbarT from \"../Component/NavbarT\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TestPaper = () => {\n  _s();\n  var _location$state, _location$state3;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [selectedAnswers, setSelectedAnswers] = useState({});\n  const [examInfo, setExamInfo] = useState(((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.examInfo) || {});\n  const {\n    studentId,\n    studentName\n  } = location.state || {};\n  useEffect(() => {\n    var _location$state2;\n    if (!((_location$state2 = location.state) !== null && _location$state2 !== void 0 && _location$state2.examInfo)) {\n      const storedExamInfo = JSON.parse(localStorage.getItem(\"examInfo\"));\n      if (storedExamInfo) {\n        setExamInfo(storedExamInfo);\n      }\n    }\n  }, [(_location$state3 = location.state) === null || _location$state3 === void 0 ? void 0 : _location$state3.examInfo]);\n  const divideIntoColumns = (arr, columns) => {\n    const divided = [];\n    const chunkSize = Math.ceil(arr.length / columns);\n    for (let i = 0; i < columns; i++) {\n      divided.push(arr.slice(i * chunkSize, (i + 1) * chunkSize));\n    }\n    return divided;\n  };\n  const questions = examInfo.selectedQuestions || [];\n  const selectedColumns = divideIntoColumns(questions, 2);\n  const updateSelectedAnswer = (questionId, answer) => {\n    setSelectedAnswers(prevAnswers => ({\n      ...prevAnswers,\n      [questionId]: answer\n    }));\n  };\n  const handleSubmit = () => {\n    navigate(\"/namelist\", {\n      state: {\n        selectedAnswers,\n        examInfo,\n        studentId,\n        studentName\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [sessionStorage.getItem(\"mem_type\") === \"1\" ? /*#__PURE__*/_jsxDEV(NavbarT, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 53\n    }, this) : /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 67\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"testpaper-title\",\n      children: \"\\xB7 \\uC2DC\\uD5D8 \\uBCF4\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"testpaper-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"testpaper-box\",\n        children: selectedColumns.map((column, columnIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"testpaper-column\",\n          children: column.map((question, questionIndex) => {\n            var _question$options, _question$options2, _question$options3, _question$options4, _question$options5;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"testpaper-question\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [columnIndex * 2 + questionIndex + 1, \". \", question.content]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"\\u2460 \", (_question$options = question.options) === null || _question$options === void 0 ? void 0 : _question$options.option1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"\\u2461 \", (_question$options2 = question.options) === null || _question$options2 === void 0 ? void 0 : _question$options2.option2]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"\\u2462 \", (_question$options3 = question.options) === null || _question$options3 === void 0 ? void 0 : _question$options3.option3]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"\\u2463 \", (_question$options4 = question.options) === null || _question$options4 === void 0 ? void 0 : _question$options4.option4]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"\\u2464 \", (_question$options5 = question.options) === null || _question$options5 === void 0 ? void 0 : _question$options5.option5]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"answer-options\",\n                children: Object.values(question.options).map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `option-button ${selectedAnswers[question.id] === option ? \"selected\" : \"\"}`,\n                  onClick: () => updateSelectedAnswer(question.id, option),\n                  children: option\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 19\n              }, this)]\n            }, question.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this);\n          })\n        }, columnIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"testpaper-btnbox\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"testpaper-btn\",\n        onClick: handleSubmit,\n        children: \"\\uC81C\\uCD9C\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(TestPaper, \"VoXIioXpUkd11k8FzGqXBhNB4HE=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = TestPaper;\nexport default TestPaper;\nvar _c;\n$RefreshReg$(_c, \"TestPaper\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","NavbarT","useNavigate","useLocation","jsxDEV","_jsxDEV","TestPaper","_s","_location$state","_location$state3","navigate","location","selectedAnswers","setSelectedAnswers","examInfo","setExamInfo","state","studentId","studentName","_location$state2","storedExamInfo","JSON","parse","localStorage","getItem","divideIntoColumns","arr","columns","divided","chunkSize","Math","ceil","length","i","push","slice","questions","selectedQuestions","selectedColumns","updateSelectedAnswer","questionId","answer","prevAnswers","handleSubmit","children","sessionStorage","fileName","_jsxFileName","lineNumber","columnNumber","className","map","column","columnIndex","question","questionIndex","_question$options","_question$options2","_question$options3","_question$options4","_question$options5","content","options","option1","option2","option3","option4","option5","Object","values","option","index","id","onClick","_c","$RefreshReg$"],"sources":["C:/Users/smhrd/Documents/GitHub/react/eduwords/eduwords/src/js/testpaper.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"../css/testpaper.css\";\r\nimport Navbar from \"../Component/Navbar\";\r\nimport NavbarT from \"../Component/NavbarT\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\n\r\nconst TestPaper = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [selectedAnswers, setSelectedAnswers] = useState({});\r\n  const [examInfo, setExamInfo] = useState(location.state?.examInfo || {});\r\n  const { studentId, studentName } = location.state || {};\r\n\r\n  useEffect(() => {\r\n    if (!location.state?.examInfo) {\r\n      const storedExamInfo = JSON.parse(localStorage.getItem(\"examInfo\"));\r\n      if (storedExamInfo) {\r\n        setExamInfo(storedExamInfo);\r\n      }\r\n    }\r\n  }, [location.state?.examInfo]);\r\n\r\n  const divideIntoColumns = (arr, columns) => {\r\n    const divided = [];\r\n    const chunkSize = Math.ceil(arr.length / columns);\r\n    for (let i = 0; i < columns; i++) {\r\n      divided.push(arr.slice(i * chunkSize, (i + 1) * chunkSize));\r\n    }\r\n    return divided;\r\n  };\r\n\r\n  const questions = examInfo.selectedQuestions || [];\r\n  const selectedColumns = divideIntoColumns(questions, 2);\r\n\r\n  const updateSelectedAnswer = (questionId, answer) => {\r\n    setSelectedAnswers((prevAnswers) => ({\r\n      ...prevAnswers,\r\n      [questionId]: answer,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    navigate(\"/namelist\", {\r\n      state: {\r\n        selectedAnswers,\r\n        examInfo,\r\n        studentId,\r\n        studentName,\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {sessionStorage.getItem(\"mem_type\") === \"1\" ? <NavbarT /> : <Navbar />}\r\n      <h2 className=\"testpaper-title\">· 시험 보기</h2>\r\n      <div className=\"testpaper-container\">\r\n        <div className=\"testpaper-box\">\r\n          {selectedColumns.map((column, columnIndex) => (\r\n            <div key={columnIndex} className=\"testpaper-column\">\r\n              {column.map((question, questionIndex) => (\r\n                <div key={question.id} className=\"testpaper-question\">\r\n                  <p>\r\n                    {columnIndex * 2 + questionIndex + 1}. {question.content}\r\n                  </p>\r\n                  <p>① {question.options?.option1}</p>\r\n                  <p>② {question.options?.option2}</p>\r\n                  <p>③ {question.options?.option3}</p>\r\n                  <p>④ {question.options?.option4}</p>\r\n                  <p>⑤ {question.options?.option5}</p>\r\n                  <div className=\"answer-options\">\r\n                    {Object.values(question.options).map((option, index) => (\r\n                      <button\r\n                        key={index}\r\n                        className={`option-button ${\r\n                          selectedAnswers[question.id] === option\r\n                            ? \"selected\"\r\n                            : \"\"\r\n                        }`}\r\n                        onClick={() =>\r\n                          updateSelectedAnswer(question.id, option)\r\n                        }\r\n                      >\r\n                        {option}\r\n                      </button>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <br />\r\n      <div className=\"testpaper-btnbox\">\r\n        <button className=\"testpaper-btn\" onClick={handleSubmit}>\r\n          제출하기\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TestPaper;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,sBAAsB;AAC7B,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,eAAA,EAAAC,gBAAA;EACtB,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACS,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,EAAAU,eAAA,GAAAG,QAAQ,CAACK,KAAK,cAAAR,eAAA,uBAAdA,eAAA,CAAgBM,QAAQ,KAAI,CAAC,CAAC,CAAC;EACxE,MAAM;IAAEG,SAAS;IAAEC;EAAY,CAAC,GAAGP,QAAQ,CAACK,KAAK,IAAI,CAAC,CAAC;EAEvDjB,SAAS,CAAC,MAAM;IAAA,IAAAoB,gBAAA;IACd,IAAI,GAAAA,gBAAA,GAACR,QAAQ,CAACK,KAAK,cAAAG,gBAAA,eAAdA,gBAAA,CAAgBL,QAAQ,GAAE;MAC7B,MAAMM,cAAc,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC;MACnE,IAAIJ,cAAc,EAAE;QAClBL,WAAW,CAACK,cAAc,CAAC;MAC7B;IACF;EACF,CAAC,EAAE,EAAAX,gBAAA,GAACE,QAAQ,CAACK,KAAK,cAAAP,gBAAA,uBAAdA,gBAAA,CAAgBK,QAAQ,CAAC,CAAC;EAE9B,MAAMW,iBAAiB,GAAGA,CAACC,GAAG,EAAEC,OAAO,KAAK;IAC1C,MAAMC,OAAO,GAAG,EAAE;IAClB,MAAMC,SAAS,GAAGC,IAAI,CAACC,IAAI,CAACL,GAAG,CAACM,MAAM,GAAGL,OAAO,CAAC;IACjD,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,OAAO,EAAEM,CAAC,EAAE,EAAE;MAChCL,OAAO,CAACM,IAAI,CAACR,GAAG,CAACS,KAAK,CAACF,CAAC,GAAGJ,SAAS,EAAE,CAACI,CAAC,GAAG,CAAC,IAAIJ,SAAS,CAAC,CAAC;IAC7D;IACA,OAAOD,OAAO;EAChB,CAAC;EAED,MAAMQ,SAAS,GAAGtB,QAAQ,CAACuB,iBAAiB,IAAI,EAAE;EAClD,MAAMC,eAAe,GAAGb,iBAAiB,CAACW,SAAS,EAAE,CAAC,CAAC;EAEvD,MAAMG,oBAAoB,GAAGA,CAACC,UAAU,EAAEC,MAAM,KAAK;IACnD5B,kBAAkB,CAAE6B,WAAW,KAAM;MACnC,GAAGA,WAAW;MACd,CAACF,UAAU,GAAGC;IAChB,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAME,YAAY,GAAGA,CAAA,KAAM;IACzBjC,QAAQ,CAAC,WAAW,EAAE;MACpBM,KAAK,EAAE;QACLJ,eAAe;QACfE,QAAQ;QACRG,SAAS;QACTC;MACF;IACF,CAAC,CAAC;EACJ,CAAC;EAED,oBACEb,OAAA;IAAAuC,QAAA,GACGC,cAAc,CAACrB,OAAO,CAAC,UAAU,CAAC,KAAK,GAAG,gBAAGnB,OAAA,CAACJ,OAAO;MAAA6C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAAG5C,OAAA,CAACL,MAAM;MAAA8C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtE5C,OAAA;MAAI6C,SAAS,EAAC,iBAAiB;MAAAN,QAAA,EAAC;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5C5C,OAAA;MAAK6C,SAAS,EAAC,qBAAqB;MAAAN,QAAA,eAClCvC,OAAA;QAAK6C,SAAS,EAAC,eAAe;QAAAN,QAAA,EAC3BN,eAAe,CAACa,GAAG,CAAC,CAACC,MAAM,EAAEC,WAAW,kBACvChD,OAAA;UAAuB6C,SAAS,EAAC,kBAAkB;UAAAN,QAAA,EAChDQ,MAAM,CAACD,GAAG,CAAC,CAACG,QAAQ,EAAEC,aAAa;YAAA,IAAAC,iBAAA,EAAAC,kBAAA,EAAAC,kBAAA,EAAAC,kBAAA,EAAAC,kBAAA;YAAA,oBAClCvD,OAAA;cAAuB6C,SAAS,EAAC,oBAAoB;cAAAN,QAAA,gBACnDvC,OAAA;gBAAAuC,QAAA,GACGS,WAAW,GAAG,CAAC,GAAGE,aAAa,GAAG,CAAC,EAAC,IAAE,EAACD,QAAQ,CAACO,OAAO;cAAA;gBAAAf,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACvD,CAAC,eACJ5C,OAAA;gBAAAuC,QAAA,GAAG,SAAE,GAAAY,iBAAA,GAACF,QAAQ,CAACQ,OAAO,cAAAN,iBAAA,uBAAhBA,iBAAA,CAAkBO,OAAO;cAAA;gBAAAjB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACpC5C,OAAA;gBAAAuC,QAAA,GAAG,SAAE,GAAAa,kBAAA,GAACH,QAAQ,CAACQ,OAAO,cAAAL,kBAAA,uBAAhBA,kBAAA,CAAkBO,OAAO;cAAA;gBAAAlB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACpC5C,OAAA;gBAAAuC,QAAA,GAAG,SAAE,GAAAc,kBAAA,GAACJ,QAAQ,CAACQ,OAAO,cAAAJ,kBAAA,uBAAhBA,kBAAA,CAAkBO,OAAO;cAAA;gBAAAnB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACpC5C,OAAA;gBAAAuC,QAAA,GAAG,SAAE,GAAAe,kBAAA,GAACL,QAAQ,CAACQ,OAAO,cAAAH,kBAAA,uBAAhBA,kBAAA,CAAkBO,OAAO;cAAA;gBAAApB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACpC5C,OAAA;gBAAAuC,QAAA,GAAG,SAAE,GAAAgB,kBAAA,GAACN,QAAQ,CAACQ,OAAO,cAAAF,kBAAA,uBAAhBA,kBAAA,CAAkBO,OAAO;cAAA;gBAAArB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACpC5C,OAAA;gBAAK6C,SAAS,EAAC,gBAAgB;gBAAAN,QAAA,EAC5BwB,MAAM,CAACC,MAAM,CAACf,QAAQ,CAACQ,OAAO,CAAC,CAACX,GAAG,CAAC,CAACmB,MAAM,EAAEC,KAAK,kBACjDlE,OAAA;kBAEE6C,SAAS,EAAG,iBACVtC,eAAe,CAAC0C,QAAQ,CAACkB,EAAE,CAAC,KAAKF,MAAM,GACnC,UAAU,GACV,EACL,EAAE;kBACHG,OAAO,EAAEA,CAAA,KACPlC,oBAAoB,CAACe,QAAQ,CAACkB,EAAE,EAAEF,MAAM,CACzC;kBAAA1B,QAAA,EAEA0B;gBAAM,GAVFC,KAAK;kBAAAzB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAWJ,CACT;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC;YAAA,GAzBEK,QAAQ,CAACkB,EAAE;cAAA1B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OA0BhB,CAAC;UAAA,CACP;QAAC,GA7BMI,WAAW;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA8BhB,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACN5C,OAAA;MAAAyC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACN5C,OAAA;MAAK6C,SAAS,EAAC,kBAAkB;MAAAN,QAAA,eAC/BvC,OAAA;QAAQ6C,SAAS,EAAC,eAAe;QAACuB,OAAO,EAAE9B,YAAa;QAAAC,QAAA,EAAC;MAEzD;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC1C,EAAA,CA/FID,SAAS;EAAA,QACIJ,WAAW,EACXC,WAAW;AAAA;AAAAuE,EAAA,GAFxBpE,SAAS;AAiGf,eAAeA,SAAS;AAAC,IAAAoE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
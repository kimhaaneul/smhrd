{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\smhrd\\\\Documents\\\\GitHub\\\\react\\\\eduwords\\\\eduwords\\\\src\\\\js\\\\login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Navbar from \"../Component/Navbar\";\nimport NavbarT from \"../Component/NavbarT\";\nimport \"../css/login.css\";\nimport lg from \"../img/logo.png\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mem_id = sessionStorage.getItem(\"mem_id\");\nconst mem_name = sessionStorage.getItem(\"mem_name\");\nconst mem_address = sessionStorage.getItem(\"mem_address\");\nconst mem_number = sessionStorage.getItem(\"mem_number\");\nconst mem_email = sessionStorage.getItem(\"mem_email\");\nconst Login = () => {\n  _s();\n  const [mem_id, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [type, setType] = useState(null); // mem_type 상태 추가\n  const navigate = useNavigate();\n  useEffect(() => {\n    const memType = sessionStorage.getItem(\"mem_type\");\n    setType(memType); // sessionStorage에서 mem_type 값 가져오기\n  }, []);\n  const handleLogin = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:8081/login\", {\n        mem_id: mem_id,\n        mem_pw: password\n      });\n      if (response.data.success) {\n        // 로그인 성공 처리\n        const type = response.data.mem_type;\n        const id = response.data.mem_id;\n        const name = response.data.mem_name;\n        const address = response.data.mem_address;\n        const email = response.data.mem_email;\n        const number = response.data.mem_number;\n        console.log(type);\n        sessionStorage.setItem(\"mem_id\", id);\n        sessionStorage.setItem(\"mem_type\", type);\n        sessionStorage.setItem(\"mem_name\", name);\n        sessionStorage.setItem(\"mem_address\", address);\n        sessionStorage.setItem(\"mem_email\", email);\n        sessionStorage.setItem(\"mem_number\", number);\n        navigate(\"/\"); // 로그인 성공 시 이동할 페이지\n      } else {\n        console.log(response);\n        alert(\"로그인에 실패했습니다. 아이디와 비밀번호를 확인하세요.\");\n      }\n    } catch (error) {\n      alert(\"로그인 중 오류가 발생했습니다. 다시 시도해주세요.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"logindiv\",\n    children: [type === \"1\" ? /*#__PURE__*/_jsxDEV(NavbarT, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 23\n    }, this) : /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 37\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: lg,\n      id: \"logoImg\",\n      alt: \"Logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      placeholder: \"\\uC544\\uC774\\uB514\",\n      required: true,\n      value: mem_id,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      id: \"password\",\n      placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n      required: true,\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      id: \"loginbtn\",\n      children: \"\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tool\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/find\",\n            children: \"ID \\uCC3E\\uAE30 \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/find\",\n            children: \"PW \\uCC3E\\uAE30 \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/tp\",\n            children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"MsmmMQ/rbCNGNmBeNUG72GMVOvs=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","NavbarT","lg","axios","useNavigate","jsxDEV","_jsxDEV","mem_id","sessionStorage","getItem","mem_name","mem_address","mem_number","mem_email","Login","_s","setUsername","password","setPassword","type","setType","navigate","memType","handleLogin","response","post","mem_pw","data","success","mem_type","id","name","address","email","number","console","log","setItem","alert","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","placeholder","required","value","onChange","e","target","onClick","href","_c","$RefreshReg$"],"sources":["C:/Users/smhrd/Documents/GitHub/react/eduwords/eduwords/src/js/login.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Navbar from \"../Component/Navbar\";\r\nimport NavbarT from \"../Component/NavbarT\";\r\nimport \"../css/login.css\";\r\nimport lg from \"../img/logo.png\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nconst mem_id = sessionStorage.getItem(\"mem_id\");\r\nconst mem_name = sessionStorage.getItem(\"mem_name\");\r\nconst mem_address = sessionStorage.getItem(\"mem_address\");\r\nconst mem_number = sessionStorage.getItem(\"mem_number\");\r\nconst mem_email = sessionStorage.getItem(\"mem_email\");\r\nconst Login = () => {\r\n  const [mem_id, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [type, setType] = useState(null); // mem_type 상태 추가\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const memType = sessionStorage.getItem(\"mem_type\");\r\n    setType(memType); // sessionStorage에서 mem_type 값 가져오기\r\n  }, []);\r\n\r\n  const handleLogin = async () => {\r\n    try {\r\n      const response = await axios.post(\"http://localhost:8081/login\", {\r\n        mem_id: mem_id,\r\n        mem_pw: password,\r\n      });\r\n\r\n      if (response.data.success) {\r\n        // 로그인 성공 처리\r\n        const type = response.data.mem_type;\r\n        const id = response.data.mem_id;\r\n        const name = response.data.mem_name;\r\n        const address = response.data.mem_address;\r\n        const email = response.data.mem_email;\r\n        const number = response.data.mem_number;\r\n        console.log(type);\r\n        sessionStorage.setItem(\"mem_id\", id);\r\n        sessionStorage.setItem(\"mem_type\", type);\r\n        sessionStorage.setItem(\"mem_name\", name);\r\n        sessionStorage.setItem(\"mem_address\", address);\r\n        sessionStorage.setItem(\"mem_email\", email);\r\n        sessionStorage.setItem(\"mem_number\", number);\r\n        navigate(\"/\"); // 로그인 성공 시 이동할 페이지\r\n      } else {\r\n        console.log(response);\r\n        alert(\"로그인에 실패했습니다. 아이디와 비밀번호를 확인하세요.\");\r\n      }\r\n    } catch (error) {\r\n      alert(\"로그인 중 오류가 발생했습니다. 다시 시도해주세요.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"logindiv\">\r\n      {type === \"1\" ? <NavbarT /> : <Navbar />}\r\n      <img src={lg} id=\"logoImg\" alt=\"Logo\" />\r\n      <br />\r\n      <input\r\n        type=\"text\"\r\n        name=\"username\"\r\n        placeholder=\"아이디\"\r\n        required\r\n        value={mem_id}\r\n        onChange={(e) => setUsername(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        name=\"password\"\r\n        id=\"password\"\r\n        placeholder=\"비밀번호\"\r\n        required\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n      />\r\n      <button onClick={handleLogin} id=\"loginbtn\">\r\n        로그인\r\n      </button>\r\n      <br />\r\n      <br />\r\n      <div className=\"tool\">\r\n        <ul>\r\n          <li>\r\n            <a href=\"/find\">ID 찾기 </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"/find\">PW 찾기 </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"/tp\">회원가입</a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
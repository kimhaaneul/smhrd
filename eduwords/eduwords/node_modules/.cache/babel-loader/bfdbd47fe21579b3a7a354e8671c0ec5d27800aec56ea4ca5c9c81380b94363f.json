{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\smhrd\\\\Documents\\\\GitHub\\\\react\\\\eduwords\\\\eduwords\\\\src\\\\js\\\\join.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport NavbarT from \"../Component/NavbarT\";\nimport Navbar from \"../Component/Navbar\";\nimport \"../css/join.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst type = sessionStorage.getItem(\"mem_type\");\nfunction Join() {\n  _s();\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [mem_pw, setPassword] = useState(\"\");\n  const [mem_id, setUsername] = useState(\"\");\n  const [usernameMessage, setUsernameMessage] = useState(\"\");\n  const [usernameMessageStyle, setUsernameMessageStyle] = useState({});\n  const [isUsernameValid, setIsUsernameValid] = useState(false);\n  const [mem_name, setFullname] = useState(\"\");\n  const [mem_number, setPhone] = useState(\"\");\n  const [mem_address, setAddress] = useState(\"\");\n  const [mem_email, setEmail] = useState(\"\");\n  const [mem_type, setType] = useState(\"0\");\n  const navigate = useNavigate();\n  useEffect(() => {\n    const messageElement = document.getElementById(\"passwordMessage\");\n    if (confirmPassword === mem_pw) {\n      messageElement.textContent = \"비밀번호가 일치합니다.\";\n      messageElement.style.color = \"#239aff\";\n    } else {\n      messageElement.textContent = \"일치하지 않습니다\";\n      messageElement.style.color = \"red\";\n      setIsUsernameValid(false);\n    }\n  }, [confirmPassword, mem_pw]);\n  const handleUsernameCheck = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:8081/check\", {\n        mem_id\n      });\n      if (response.data.exists) {\n        setUsernameMessage(\"이미 사용 중인 아이디입니다.\");\n        setUsernameMessageStyle({\n          color: \"red\",\n          fontSize: \"12px\"\n        });\n        setIsUsernameValid(false);\n      } else {\n        setUsernameMessage(\"사용 가능한 아이디입니다.\");\n        setUsernameMessageStyle({\n          color: \"#239aff\",\n          fontSize: \"12px\"\n        });\n        setIsUsernameValid(true);\n      }\n    } catch (error) {\n      setUsernameMessage(\"아이디 중복 확인에 실패했습니다. 다시 시도해주세요.\");\n      setUsernameMessageStyle({\n        color: \"red\",\n        fontSize: \"12px\"\n      });\n      setIsUsernameValid(false);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (isUsernameValid && mem_pw === confirmPassword) {\n      const joined_at = new Date().toLocaleDateString();\n      const member = {\n        mem_id,\n        mem_pw,\n        mem_name,\n        mem_number,\n        mem_address,\n        mem_type,\n        mem_email,\n        joined_at\n      };\n      try {\n        await axios.post(\"http://localhost:8081/register\", member);\n        navigate(\"/js\", {\n          state: {\n            mem_id,\n            joined_at\n          }\n        });\n      } catch (error) {\n        alert(\"회원 가입에 실패했습니다. 다시 시도해주세요.\");\n      }\n    } else {\n      alert(\"모든 정보를 올바르게 입력해주세요.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"joindiv\",\n    children: [type === 1 ? /*#__PURE__*/_jsxDEV(NavbarT, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 35\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uAC00\\uC785 \\uC815\\uBCF4 \\uC785\\uB825\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        id: \"joinTable\",\n        children: [/*#__PURE__*/_jsxDEV(\"tbody\", {\n          className: \"section\",\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              colSpan: 2,\n              children: \"\\uC544\\uC774\\uB514\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"username\",\n                placeholder: \"\\uC544\\uC774\\uB514\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n                required: true,\n                value: mem_id,\n                onChange: e => setUsername(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: handleUsernameCheck,\n                id: \"idbtn\",\n                children: \"\\uC911\\uBCF5\\uD655\\uC778\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                id: \"usernameMessage\",\n                style: usernameMessageStyle,\n                children: usernameMessage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              colSpan: 2,\n              children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                name: \"password\",\n                id: \"password\",\n                placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n                required: true,\n                value: mem_pw,\n                onChange: e => setPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              colSpan: 2,\n              children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uC7AC\\uC785\\uB825\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                name: \"confirmPassword\",\n                id: \"confirmPassword\",\n                placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uB2E4\\uC2DC \\uC785\\uB825\\uD558\\uC138\\uC694\",\n                required: true,\n                value: confirmPassword,\n                onChange: e => setConfirmPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                id: \"passwordMessage\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          className: \"section\",\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              colSpan: 2,\n              children: \"\\uC774\\uB984\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"fullname\",\n                placeholder: \"\\uC774\\uB984\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n                required: true,\n                value: mem_name,\n                onChange: e => setFullname(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              colSpan: 2,\n              children: \"\\uC5F0\\uB77D\\uCC98\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"tel\",\n                name: \"phone\",\n                placeholder: \"\\uC5F0\\uB77D\\uCC98\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n                required: true,\n                value: mem_number,\n                onChange: e => setPhone(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              colSpan: 2,\n              children: \"\\uC8FC\\uC18C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"address\",\n                placeholder: \"\\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n                required: true,\n                value: mem_address,\n                onChange: e => setAddress(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              colSpan: 2,\n              children: \"\\uC774\\uBA54\\uC77C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                name: \"email\",\n                placeholder: \"\\uC774\\uBA54\\uC77C\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n                required: true,\n                value: mem_email,\n                onChange: e => setEmail(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"container\",\n        disabled: !isUsernameValid,\n        children: \"\\uB2E4\\uC74C\\uC73C\\uB85C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(Join, \"XxWmv67j9zUz0HgjeUFIsgNU++g=\", false, function () {\n  return [useNavigate];\n});\n_c = Join;\nexport default Join;\nvar _c;\n$RefreshReg$(_c, \"Join\");","map":{"version":3,"names":["React","useEffect","useState","NavbarT","Navbar","useNavigate","axios","jsxDEV","_jsxDEV","type","sessionStorage","getItem","Join","_s","confirmPassword","setConfirmPassword","mem_pw","setPassword","mem_id","setUsername","usernameMessage","setUsernameMessage","usernameMessageStyle","setUsernameMessageStyle","isUsernameValid","setIsUsernameValid","mem_name","setFullname","mem_number","setPhone","mem_address","setAddress","mem_email","setEmail","mem_type","setType","navigate","messageElement","document","getElementById","textContent","style","color","handleUsernameCheck","response","post","data","exists","fontSize","error","handleSubmit","e","preventDefault","joined_at","Date","toLocaleDateString","member","state","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","id","colSpan","name","placeholder","required","value","onChange","target","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/smhrd/Documents/GitHub/react/eduwords/eduwords/src/js/join.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport NavbarT from \"../Component/NavbarT\";\r\nimport Navbar from \"../Component/Navbar\";\r\nimport \"../css/join.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst type = sessionStorage.getItem(\"mem_type\");\r\n\r\nfunction Join() {\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [mem_pw, setPassword] = useState(\"\");\r\n  const [mem_id, setUsername] = useState(\"\");\r\n  const [usernameMessage, setUsernameMessage] = useState(\"\");\r\n  const [usernameMessageStyle, setUsernameMessageStyle] = useState({});\r\n  const [isUsernameValid, setIsUsernameValid] = useState(false);\r\n  const [mem_name, setFullname] = useState(\"\");\r\n  const [mem_number, setPhone] = useState(\"\");\r\n  const [mem_address, setAddress] = useState(\"\");\r\n  const [mem_email, setEmail] = useState(\"\");\r\n  const [mem_type, setType] = useState(\"0\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const messageElement = document.getElementById(\"passwordMessage\");\r\n\r\n    if (confirmPassword === mem_pw) {\r\n      messageElement.textContent = \"비밀번호가 일치합니다.\";\r\n      messageElement.style.color = \"#239aff\";\r\n    } else {\r\n      messageElement.textContent = \"일치하지 않습니다\";\r\n      messageElement.style.color = \"red\";\r\n      setIsUsernameValid(false);\r\n    }\r\n  }, [confirmPassword, mem_pw]);\r\n\r\n  const handleUsernameCheck = async () => {\r\n    try {\r\n      const response = await axios.post(\"http://localhost:8081/check\", {\r\n        mem_id,\r\n      });\r\n\r\n      if (response.data.exists) {\r\n        setUsernameMessage(\"이미 사용 중인 아이디입니다.\");\r\n        setUsernameMessageStyle({ color: \"red\", fontSize: \"12px\" });\r\n        setIsUsernameValid(false);\r\n      } else {\r\n        setUsernameMessage(\"사용 가능한 아이디입니다.\");\r\n        setUsernameMessageStyle({ color: \"#239aff\", fontSize: \"12px\" });\r\n        setIsUsernameValid(true);\r\n      }\r\n    } catch (error) {\r\n      setUsernameMessage(\"아이디 중복 확인에 실패했습니다. 다시 시도해주세요.\");\r\n      setUsernameMessageStyle({ color: \"red\", fontSize: \"12px\" });\r\n      setIsUsernameValid(false);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (isUsernameValid && mem_pw === confirmPassword) {\r\n      const joined_at = new Date().toLocaleDateString();\r\n      const member = {\r\n        mem_id,\r\n        mem_pw,\r\n        mem_name,\r\n        mem_number,\r\n        mem_address,\r\n        mem_type,\r\n        mem_email,\r\n        joined_at,\r\n      };\r\n      try {\r\n        await axios.post(\"http://localhost:8081/register\", member);\r\n        navigate(\"/js\", { state: { mem_id, joined_at } });\r\n      } catch (error) {\r\n        alert(\"회원 가입에 실패했습니다. 다시 시도해주세요.\");\r\n      }\r\n    } else {\r\n      alert(\"모든 정보를 올바르게 입력해주세요.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"joindiv\">\r\n      {type === 1 ? <NavbarT /> : <Navbar />}\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <h1>가입 정보 입력</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <table id=\"joinTable\">\r\n          <tbody className=\"section\">\r\n            <tr>\r\n              <th colSpan={2}>아이디</th>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"username\"\r\n                  placeholder=\"아이디를 입력하세요\"\r\n                  required\r\n                  value={mem_id}\r\n                  onChange={(e) => setUsername(e.target.value)}\r\n                />\r\n                <button type=\"button\" onClick={handleUsernameCheck} id=\"idbtn\">\r\n                  중복확인\r\n                </button>\r\n                <span id=\"usernameMessage\" style={usernameMessageStyle}>\r\n                  {usernameMessage}\r\n                </span>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan={2}>비밀번호</th>\r\n              <td>\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                  placeholder=\"비밀번호를 입력하세요\"\r\n                  required\r\n                  value={mem_pw}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan={2}>비밀번호 재입력</th>\r\n              <td>\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"confirmPassword\"\r\n                  id=\"confirmPassword\"\r\n                  placeholder=\"비밀번호를 다시 입력하세요\"\r\n                  required\r\n                  value={confirmPassword}\r\n                  onChange={(e) => setConfirmPassword(e.target.value)}\r\n                />\r\n                <span id=\"passwordMessage\"></span>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n          <hr />\r\n          <tbody className=\"section\">\r\n            <tr>\r\n              <th colSpan={2}>이름</th>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"fullname\"\r\n                  placeholder=\"이름을 입력하세요\"\r\n                  required\r\n                  value={mem_name}\r\n                  onChange={(e) => setFullname(e.target.value)}\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan={2}>연락처</th>\r\n              <td>\r\n                <input\r\n                  type=\"tel\"\r\n                  name=\"phone\"\r\n                  placeholder=\"연락처를 입력하세요\"\r\n                  required\r\n                  value={mem_number}\r\n                  onChange={(e) => setPhone(e.target.value)}\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan={2}>주소</th>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"address\"\r\n                  placeholder=\"주소를 입력하세요\"\r\n                  required\r\n                  value={mem_address}\r\n                  onChange={(e) => setAddress(e.target.value)}\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan={2}>이메일</th>\r\n              <td>\r\n                <input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  placeholder=\"이메일을 입력하세요\"\r\n                  required\r\n                  value={mem_email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <button type=\"submit\" className=\"container\" disabled={!isUsernameValid}>\r\n          다음으로\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Join;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
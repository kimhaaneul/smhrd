{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\smhrd\\\\Documents\\\\GitHub\\\\react\\\\eduwords\\\\eduwords\\\\src\\\\js\\\\studyrecord.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport \"../css/studyrecord.css\";\nimport Navbar from \"../Component/Navbar\";\nimport { Bar } from \"react-chartjs-2\";\nimport { Chart, registerables } from \"chart.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(...registerables);\nconst StudyRecord = () => {\n  _s();\n  var _location$state, _location$state2, _location$state3;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const examInfo = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.examInfo) || {};\n  const gradingResults = ((_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.gradingResults) || [];\n  const score = ((_location$state3 = location.state) === null || _location$state3 === void 0 ? void 0 : _location$state3.score) || 0;\n  const memId = sessionStorage.getItem(\"mem_id\");\n  const [chartData, setChartData] = useState([]);\n  const [studentName, setStudentName] = useState(\"학생 이름\"); // 예시로 학생 이름을 설정\n  const [formattedData, setFormattedData] = useState([]);\n  const [averageScore, setAverageScore] = useState(0);\n  const [examsInfo, setExamsInfo] = useState([]);\n  const [selectedExamScore, setSelectedExamScore] = useState(null);\n  const [selectedExamQuestions, setSelectedExamQuestions] = useState([]);\n  const [selectedAnswers, setSelectedAnswers] = useState({});\n  const [selectedAnswerCheck, setSelectedAnswerCheck] = useState({});\n  const [isAnswered, setIsAnswered] = useState(true); // 추가된 상태\n\n  const selectedQuestions = examInfo.selectedQuestions || [];\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.post(\"http://localhost:8081/getTests\", {\n          mem_id: memId\n        });\n        const calculateScore = (studentAnswer, answerKey) => {\n          if (!studentAnswer || !answerKey) {\n            console.error(\"studentAnswer 또는 answerKey가 없습니다.\");\n            return 0;\n          }\n          const studentAnswers = JSON.parse(studentAnswer);\n          const answerKeys = JSON.parse(answerKey);\n          let correctAnswers = 0;\n          const totalQuestions = Object.keys(answerKeys).length;\n          for (let key in studentAnswers) {\n            if (studentAnswers[key] === answerKeys[key]) {\n              correctAnswers++;\n            }\n          }\n          return (correctAnswers / totalQuestions * 100).toFixed(2);\n        };\n        const formattedData = response.data.map(item => {\n          const date = new Date(item.submitted_at);\n          const formattedDate = date.toLocaleDateString(\"ko-KR\", {\n            year: \"numeric\",\n            month: \"2-digit\",\n            day: \"2-digit\"\n          }).replace(/(\\d{4})\\.\\s?(\\d{2})\\.\\s?(\\d{2})/, \"$1년 $2월 $3일\");\n          const score = calculateScore(item.answer, item.answer_check);\n          return {\n            date: formattedDate,\n            workbookName: item.workbook_name,\n            score: parseFloat(score)\n          };\n        });\n        setChartData(formattedData);\n        setFormattedData(formattedData);\n        const avgScore = formattedData.reduce((sum, item) => sum + item.score, 0) / formattedData.length;\n        setAverageScore(avgScore);\n      } catch (error) {\n        console.error(\"데이터를 가져오는 중 오류 발생:\", error);\n      }\n    };\n    if (memId) {\n      fetchData();\n    } else {\n      console.error(\"mem_id is null or undefined\");\n    }\n  }, [memId]);\n  useEffect(() => {\n    const fetchExams = async () => {\n      try {\n        const response = await axios.post(\"http://localhost:8081/getExamsByMemId\", {\n          mem_id: memId\n        });\n        setExamsInfo(response.data);\n      } catch (error) {\n        console.error(\"시험 정보를 불러오는 중 오류 발생:\", error);\n      }\n    };\n    if (memId) {\n      fetchExams();\n    } else {\n      console.error(\"mem_id is null or undefined\");\n    }\n  }, [memId]);\n  const formatDate = dateString => {\n    if (!dateString) return \"\";\n    const date = new Date(dateString);\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, \"0\");\n    const day = String(date.getDate()).padStart(2, \"0\");\n    return `${year}-${month}-${day}`;\n  };\n  const divideIntoColumns = (arr, columns) => {\n    const divided = [];\n    const chunkSize = Math.ceil(arr.length / columns);\n    for (let i = 0; i < columns; i++) {\n      divided.push(arr.slice(i * chunkSize, (i + 1) * chunkSize));\n    }\n    return divided;\n  };\n  const renderIncorrectQuestions = () => {\n    if (!isAnswered) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"all-box\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"studyrecord-title\",\n          children: \"\\uC544\\uC9C1 \\uC548\\uD47C \\uBB38\\uC81C\\uC9D1\\uC785\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 7\n      }, this);\n    }\n    const columns = divideIntoColumns(selectedExamQuestions, 2);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"all-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"all-box\",\n        children: columns.map((column, columnIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"all-column\",\n          children: column.map((question, questionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"all-question\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [columnIndex * columns[0].length + questionIndex + 1, \".\", \" \", question.qes_desc]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 19\n            }, this), question.qes_detail && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: question.qes_detail\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 43\n            }, this), question.ex1 && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u2460 \", question.ex1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 36\n            }, this), question.ex2 && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u2461 \", question.ex2]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 36\n            }, this), question.ex3 && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u2462 \", question.ex3]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 36\n            }, this), question.ex4 && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u2463 \", question.ex4]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 36\n            }, this), question.ex5 && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u2464 \", question.ex5]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 36\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"\\uC815\\uB2F5:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 21\n              }, this), \" \", selectedAnswerCheck[question.qes_seq]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: selectedAnswers[question.qes_seq] !== selectedAnswerCheck[question.qes_seq] ? \"red\" : \"black\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"\\uB0B4 \\uB2F5:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 21\n              }, this), \" \", selectedAnswers[question.qes_seq]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 19\n            }, this)]\n          }, question.qes_seq, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 17\n          }, this))\n        }, columnIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this);\n  };\n  const gostudyroom = () => {\n    navigate(\"/studyRoom\");\n  };\n  const handleTableClick = async exam => {\n    try {\n      const response = await axios.post(\"http://localhost:8081/getTestById\", {\n        testId: exam.test_seq\n      });\n      const {\n        answer,\n        answer_check,\n        workbook_qes\n      } = response.data;\n      if (!answer) {\n        setIsAnswered(false); // 답안이 제출되지 않은 경우\n      } else {\n        setIsAnswered(true); // 답안이 제출된 경우\n        const score = calculateScore(answer, answer_check);\n        const questions = JSON.parse(workbook_qes);\n        const answers = JSON.parse(answer);\n        const answerCheck = JSON.parse(answer_check);\n        setSelectedExamScore(Math.round(score));\n        setSelectedExamQuestions(questions);\n        setSelectedAnswers(answers);\n        setSelectedAnswerCheck(answerCheck);\n        console.log(\"Selected Exam Score:\", score);\n      }\n    } catch (error) {\n      console.log(exam);\n      console.error(\"시험 점수를 불러오는 중 오류 발생:\", error);\n    }\n  };\n  const calculateScore = (studentAnswer, answerKey) => {\n    if (!studentAnswer || !answerKey) {\n      console.error(\"studentAnswer 또는 answerKey가 없습니다.\");\n      return 0;\n    }\n    const studentAnswers = JSON.parse(studentAnswer);\n    const answerKeys = JSON.parse(answerKey);\n    let correctAnswers = 0;\n    const totalQuestions = Object.keys(answerKeys).length;\n    for (let key in studentAnswers) {\n      if (studentAnswers[key] === answerKeys[key]) {\n        correctAnswers++;\n      }\n    }\n    return (correctAnswers / totalQuestions * 100).toFixed(2);\n  };\n\n  // Chart.js data and options\n  const chartIn = {\n    labels: chartData.map(item => item.date),\n    datasets: [{\n      label: \"점수\",\n      data: chartData.map(item => Math.round(item.score)),\n      backgroundColor: \"#239aff\",\n      borderColor: \"rgba(75, 192, 192, 1)\",\n      borderWidth: 1\n    }]\n  };\n  const options = {\n    maintainAspectRatio: false,\n    aspectRatio: 2,\n    scales: {\n      y: {\n        beginAtZero: true,\n        max: 100\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"studyrecord-title\",\n      children: \"\\xB7 \\uACF5\\uBD80\\uAE30\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"sr-h3\",\n      children: \"\\xB7 \\uC2DC\\uD5D8 \\uB0A0\\uC9DC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"srdate-box\",\n      children: examsInfo.reduce((acc, exam, index, array) => {\n        if (index % 2 === 0) {\n          acc.push(array.slice(index, index + 2));\n        }\n        return acc;\n      }, []).map((examPair, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"t-listtable-wrapper\",\n        children: examPair.map((exam, subIndex) => /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"t-listtable\",\n          onClick: () => handleTableClick(exam),\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"t-listtable-tr1\",\n              children: /*#__PURE__*/_jsxDEV(\"th\", {\n                colSpan: 2,\n                children: [formatDate(exam.startline), \" ~ \", formatDate(exam.deadline)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"t-listtable-tr2\",\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: 2,\n                className: \"exam-name\",\n                children: exam.workbook_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 17\n          }, this)\n        }, subIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 15\n        }, this))\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"sr-h3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }, this), selectedExamScore !== null && isAnswered && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"sr-h3\",\n        children: [\" \\uC810\\uC218: \", selectedExamScore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"sr-hr\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sr-box1\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"sr-h3\",\n        children: \"\\xB7 \\uD2C0\\uB9B0 \\uBB38\\uC81C \\uBCF4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: renderIncorrectQuestions()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"sr-h3\",\n      children: \"\\xB7 \\uCD5C\\uADFC \\uC131\\uC801 \\uD55C \\uB208\\uC5D0 \\uBCF4\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"sr-hr\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"stuName\",\n      children: studentName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"infoBody\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"doneHomework\",\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"\\uBB38\\uC81C\\uC9D1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this), formattedData.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: `${item.date} - ${item.workbookName}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lookEasy\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"chart-titles\",\n          children: \"\\uB0B4 \\uC131\\uC801\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-box\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-container\",\n              style: {\n                width: '400px',\n                height: '300px'\n              },\n              children: /*#__PURE__*/_jsxDEV(Bar, {\n                data: chartIn,\n                options: options\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"chart-scores\",\n          children: [\"\\uD3C9\\uADE0 \\uC810\\uC218: \", Math.round(averageScore)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"is-btn\",\n      onClick: gostudyroom,\n      children: \"\\uD655\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 265,\n    columnNumber: 5\n  }, this);\n};\n_s(StudyRecord, \"Dg+TUb+qnwjctO+PsYjDIWxNDII=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = StudyRecord;\nexport default StudyRecord;\nvar _c;\n$RefreshReg$(_c, \"StudyRecord\");","map":{"version":3,"names":["React","useEffect","useState","axios","useLocation","useNavigate","Navbar","Bar","Chart","registerables","jsxDEV","_jsxDEV","register","StudyRecord","_s","_location$state","_location$state2","_location$state3","navigate","location","examInfo","state","gradingResults","score","memId","sessionStorage","getItem","chartData","setChartData","studentName","setStudentName","formattedData","setFormattedData","averageScore","setAverageScore","examsInfo","setExamsInfo","selectedExamScore","setSelectedExamScore","selectedExamQuestions","setSelectedExamQuestions","selectedAnswers","setSelectedAnswers","selectedAnswerCheck","setSelectedAnswerCheck","isAnswered","setIsAnswered","selectedQuestions","fetchData","response","post","mem_id","calculateScore","studentAnswer","answerKey","console","error","studentAnswers","JSON","parse","answerKeys","correctAnswers","totalQuestions","Object","keys","length","key","toFixed","data","map","item","date","Date","submitted_at","formattedDate","toLocaleDateString","year","month","day","replace","answer","answer_check","workbookName","workbook_name","parseFloat","avgScore","reduce","sum","fetchExams","formatDate","dateString","getFullYear","String","getMonth","padStart","getDate","divideIntoColumns","arr","columns","divided","chunkSize","Math","ceil","i","push","slice","renderIncorrectQuestions","className","children","fileName","_jsxFileName","lineNumber","columnNumber","column","columnIndex","question","questionIndex","qes_desc","qes_detail","ex1","ex2","ex3","ex4","ex5","qes_seq","style","color","gostudyroom","handleTableClick","exam","testId","test_seq","workbook_qes","questions","answers","answerCheck","round","log","chartIn","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","maintainAspectRatio","aspectRatio","scales","y","beginAtZero","max","acc","index","array","examPair","subIndex","onClick","colSpan","startline","deadline","width","height","_c","$RefreshReg$"],"sources":["C:/Users/smhrd/Documents/GitHub/react/eduwords/eduwords/src/js/studyrecord.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport \"../css/studyrecord.css\";\r\nimport Navbar from \"../Component/Navbar\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { Chart, registerables } from \"chart.js\";\r\n\r\nChart.register(...registerables);\r\n\r\nconst StudyRecord = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const examInfo = location.state?.examInfo || {};\r\n  const gradingResults = location.state?.gradingResults || [];\r\n  const score = location.state?.score || 0;\r\n  const memId = sessionStorage.getItem(\"mem_id\");\r\n  const [chartData, setChartData] = useState([]);\r\n  const [studentName, setStudentName] = useState(\"학생 이름\"); // 예시로 학생 이름을 설정\r\n  const [formattedData, setFormattedData] = useState([]);\r\n  const [averageScore, setAverageScore] = useState(0);\r\n  const [examsInfo, setExamsInfo] = useState([]);\r\n  const [selectedExamScore, setSelectedExamScore] = useState(null);\r\n  const [selectedExamQuestions, setSelectedExamQuestions] = useState([]);\r\n  const [selectedAnswers, setSelectedAnswers] = useState({});\r\n  const [selectedAnswerCheck, setSelectedAnswerCheck] = useState({});\r\n  const [isAnswered, setIsAnswered] = useState(true); // 추가된 상태\r\n\r\n  const selectedQuestions = examInfo.selectedQuestions || [];\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.post(\"http://localhost:8081/getTests\", {\r\n          mem_id: memId,\r\n        });\r\n\r\n        const calculateScore = (studentAnswer, answerKey) => {\r\n          if (!studentAnswer || !answerKey) {\r\n            console.error(\"studentAnswer 또는 answerKey가 없습니다.\");\r\n            return 0;\r\n          }\r\n\r\n          const studentAnswers = JSON.parse(studentAnswer);\r\n          const answerKeys = JSON.parse(answerKey);\r\n          let correctAnswers = 0;\r\n          const totalQuestions = Object.keys(answerKeys).length;\r\n\r\n          for (let key in studentAnswers) {\r\n            if (studentAnswers[key] === answerKeys[key]) {\r\n              correctAnswers++;\r\n            }\r\n          }\r\n\r\n          return ((correctAnswers / totalQuestions) * 100).toFixed(2);\r\n        };\r\n\r\n        const formattedData = response.data.map((item) => {\r\n          const date = new Date(item.submitted_at);\r\n          const formattedDate = date\r\n            .toLocaleDateString(\"ko-KR\", {\r\n              year: \"numeric\",\r\n              month: \"2-digit\",\r\n              day: \"2-digit\",\r\n            })\r\n            .replace(/(\\d{4})\\.\\s?(\\d{2})\\.\\s?(\\d{2})/, \"$1년 $2월 $3일\");\r\n\r\n          const score = calculateScore(item.answer, item.answer_check);\r\n\r\n          return {\r\n            date: formattedDate,\r\n            workbookName: item.workbook_name,\r\n            score: parseFloat(score),\r\n          };\r\n        });\r\n\r\n        setChartData(formattedData);\r\n        setFormattedData(formattedData);\r\n\r\n        const avgScore =\r\n          formattedData.reduce((sum, item) => sum + item.score, 0) /\r\n          formattedData.length;\r\n        setAverageScore(avgScore);\r\n      } catch (error) {\r\n        console.error(\"데이터를 가져오는 중 오류 발생:\", error);\r\n      }\r\n    };\r\n\r\n    if (memId) {\r\n      fetchData();\r\n    } else {\r\n      console.error(\"mem_id is null or undefined\");\r\n    }\r\n  }, [memId]);\r\n\r\n  useEffect(() => {\r\n    const fetchExams = async () => {\r\n      try {\r\n        const response = await axios.post(\r\n          \"http://localhost:8081/getExamsByMemId\",\r\n          { mem_id: memId }\r\n        );\r\n        setExamsInfo(response.data);\r\n      } catch (error) {\r\n        console.error(\"시험 정보를 불러오는 중 오류 발생:\", error);\r\n      }\r\n    };\r\n\r\n    if (memId) {\r\n      fetchExams();\r\n    } else {\r\n      console.error(\"mem_id is null or undefined\");\r\n    }\r\n  }, [memId]);\r\n\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return \"\";\r\n    const date = new Date(dateString);\r\n    const year = date.getFullYear();\r\n    const month = String(date.getMonth() + 1).padStart(2, \"0\");\r\n    const day = String(date.getDate()).padStart(2, \"0\");\r\n    return `${year}-${month}-${day}`;\r\n  };\r\n\r\n  const divideIntoColumns = (arr, columns) => {\r\n    const divided = [];\r\n    const chunkSize = Math.ceil(arr.length / columns);\r\n    for (let i = 0; i < columns; i++) {\r\n      divided.push(arr.slice(i * chunkSize, (i + 1) * chunkSize));\r\n    }\r\n    return divided;\r\n  };\r\n\r\n  const renderIncorrectQuestions = () => {\r\n    if (!isAnswered) {\r\n      return (\r\n      <div className=\"all-box\">\r\n\r\n        <h2 className=\"studyrecord-title\">아직 안푼 문제집입니다.</h2>\r\n    </div>\r\n      );\r\n    }\r\n\r\n    const columns = divideIntoColumns(selectedExamQuestions, 2);\r\n    return (\r\n      <div className=\"all-container\">\r\n        <div className=\"all-box\">\r\n          {columns.map((column, columnIndex) => (\r\n            <div key={columnIndex} className=\"all-column\">\r\n              {column.map((question, questionIndex) => (\r\n                <div key={question.qes_seq} className=\"all-question\">\r\n                  <p>\r\n                    {columnIndex * columns[0].length + questionIndex + 1}.{\" \"}\r\n                    {question.qes_desc}\r\n                  </p>\r\n                  {question.qes_detail && <p>{question.qes_detail}</p>}\r\n                  {question.ex1 && <p>① {question.ex1}</p>}\r\n                  {question.ex2 && <p>② {question.ex2}</p>}\r\n                  {question.ex3 && <p>③ {question.ex3}</p>}\r\n                  {question.ex4 && <p>④ {question.ex4}</p>}\r\n                  {question.ex5 && <p>⑤ {question.ex5}</p>}\r\n                  <p>\r\n                    <strong>정답:</strong>{\" \"}\r\n                    {selectedAnswerCheck[question.qes_seq]}\r\n                  </p>\r\n                  <p\r\n                    style={{\r\n                      color:\r\n                        selectedAnswers[question.qes_seq] !==\r\n                        selectedAnswerCheck[question.qes_seq]\r\n                          ? \"red\"\r\n                          : \"black\",\r\n                    }}\r\n                  >\r\n                    <strong>내 답:</strong> {selectedAnswers[question.qes_seq]}\r\n                  </p>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const gostudyroom = () => {\r\n    navigate(\"/studyRoom\");\r\n  };\r\n\r\n  const handleTableClick = async (exam) => {\r\n    try {\r\n      const response = await axios.post(\"http://localhost:8081/getTestById\", {\r\n        testId: exam.test_seq,\r\n      });\r\n\r\n      const { answer, answer_check, workbook_qes } = response.data;\r\n\r\n      if (!answer) {\r\n        setIsAnswered(false); // 답안이 제출되지 않은 경우\r\n      } else {\r\n        setIsAnswered(true); // 답안이 제출된 경우\r\n        const score = calculateScore(answer, answer_check);\r\n        const questions = JSON.parse(workbook_qes);\r\n        const answers = JSON.parse(answer);\r\n        const answerCheck = JSON.parse(answer_check);\r\n\r\n        setSelectedExamScore(Math.round(score));\r\n        setSelectedExamQuestions(questions);\r\n        setSelectedAnswers(answers);\r\n        setSelectedAnswerCheck(answerCheck);\r\n        console.log(\"Selected Exam Score:\", score);\r\n      }\r\n    } catch (error) {\r\n      console.log(exam);\r\n      console.error(\"시험 점수를 불러오는 중 오류 발생:\", error);\r\n    }\r\n  };\r\n\r\n  const calculateScore = (studentAnswer, answerKey) => {\r\n    if (!studentAnswer || !answerKey) {\r\n      console.error(\"studentAnswer 또는 answerKey가 없습니다.\");\r\n      return 0;\r\n    }\r\n\r\n    const studentAnswers = JSON.parse(studentAnswer);\r\n    const answerKeys = JSON.parse(answerKey);\r\n    let correctAnswers = 0;\r\n    const totalQuestions = Object.keys(answerKeys).length;\r\n\r\n    for (let key in studentAnswers) {\r\n      if (studentAnswers[key] === answerKeys[key]) {\r\n        correctAnswers++;\r\n      }\r\n    }\r\n\r\n    return ((correctAnswers / totalQuestions) * 100).toFixed(2);\r\n  };\r\n\r\n  // Chart.js data and options\r\n  const chartIn = {\r\n    labels: chartData.map((item) => item.date),\r\n    datasets: [\r\n      {\r\n        label: \"점수\",\r\n        data: chartData.map((item) => Math.round(item.score)),\r\n        backgroundColor: \"#239aff\",\r\n        borderColor: \"rgba(75, 192, 192, 1)\",\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    maintainAspectRatio: false,\r\n    aspectRatio: 2,\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n        max: 100,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <h2 className=\"studyrecord-title\">· 공부기록</h2>\r\n      <br />\r\n      <h3 className=\"sr-h3\">· 시험 날짜</h3>\r\n      <div className=\"srdate-box\">\r\n        {examsInfo.reduce((acc, exam, index, array) => {\r\n          if (index % 2 === 0) {\r\n            acc.push(array.slice(index, index + 2));\r\n          }\r\n          return acc;\r\n        }, []).map((examPair, index) => (\r\n          <div key={index} className=\"t-listtable-wrapper\">\r\n            {examPair.map((exam, subIndex) => (\r\n              <table\r\n                key={subIndex}\r\n                className=\"t-listtable\"\r\n                onClick={() => handleTableClick(exam)}\r\n              >\r\n                <tbody>\r\n                  <tr className=\"t-listtable-tr1\">\r\n                    <th colSpan={2}>\r\n                      {formatDate(exam.startline)} ~ {formatDate(exam.deadline)}\r\n                    </th>\r\n                  </tr>\r\n                  <tr className=\"t-listtable-tr2\">\r\n                    <td colSpan={2} className=\"exam-name\">\r\n                      {exam.workbook_name}\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <h3 className=\"sr-h3\"></h3>\r\n      {selectedExamScore !== null && isAnswered && (\r\n        <div>\r\n          <h3 className=\"sr-h3\"> 점수: {selectedExamScore}</h3>\r\n        </div>\r\n      )}\r\n      <hr className=\"sr-hr\" />\r\n      <div className=\"sr-box1\">\r\n        <h3 className=\"sr-h3\">· 틀린 문제 보기</h3>\r\n        <div>{renderIncorrectQuestions()}</div>\r\n      </div>\r\n      <br />\r\n      <h3 className=\"sr-h3\">· 최근 성적 한 눈에 보기</h3>\r\n      <hr className=\"sr-hr\" />\r\n      <br />\r\n      <h3 className=\"stuName\">{studentName}</h3>\r\n      <div className=\"infoBody\">\r\n        <div className=\"doneHomework\">\r\n          <th>문제집</th>\r\n          <br />\r\n          <br />\r\n          {formattedData.map((item, index) => (\r\n            <tr key={index}>\r\n              <td>{`${item.date} - ${item.workbookName}`}</td>\r\n            </tr>\r\n          ))}\r\n        </div>\r\n        <div className=\"lookEasy\">\r\n          <h2 className=\"chart-titles\">내 성적</h2>\r\n          <br/>\r\n          <br/>\r\n          <br/>\r\n          <div className=\"chart-box\">\r\n            <div className=\"chart\">\r\n              <div className=\"chart-container\" style={{ width: '400px', height: '300px' }}>\r\n                <Bar data={chartIn} options={options} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <h3 className=\"chart-scores\">\r\n                평균 점수: {Math.round(averageScore)}\r\n              </h3>\r\n        </div>\r\n      </div>\r\n      <br />\r\n      <button className=\"is-btn\" onClick={gostudyroom}>\r\n        확인\r\n      </button>\r\n      <br />\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudyRecord;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
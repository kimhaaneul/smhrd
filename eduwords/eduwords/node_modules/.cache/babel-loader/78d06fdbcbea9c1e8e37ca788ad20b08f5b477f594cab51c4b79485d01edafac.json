{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\smhrd\\\\Documents\\\\GitHub\\\\react\\\\eduwords\\\\eduwords\\\\src\\\\js\\\\questionslist.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport tb from \"../img/tb.png\";\nimport \"../css/questionslist.css\";\nimport NavbarT from \"../Component/NavbarT\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionsList = () => {\n  _s();\n  const navigate = useNavigate();\n  const currentLocation = useLocation();\n  const [examInfo, setExamInfo] = useState({});\n  useEffect(() => {\n    const storedExamInfo = JSON.parse(localStorage.getItem(\"examInfo\"));\n    if (storedExamInfo) {\n      const currentDate = new Date();\n      const endDate = new Date(storedExamInfo.endDate);\n      if (currentDate <= endDate) {\n        setExamInfo(storedExamInfo);\n      } else {\n        localStorage.removeItem(\"examInfo\"); // 만료된 데이터 삭제\n      }\n    }\n  }, []);\n  const {\n    examName,\n    startDate,\n    endDate\n  } = examInfo;\n  const handleTableClick = () => {\n    var _currentLocation$stat;\n    navigate(\"/namelist\", {\n      state: {\n        selectedAnswers: (_currentLocation$stat = currentLocation.state) === null || _currentLocation$stat === void 0 ? void 0 : _currentLocation$stat.selectedAnswers,\n        examInfo: examInfo\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavbarT, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: tb,\n      className: \"tbimg\",\n      alt: \"table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"t-listtable\",\n      onClick: handleTableClick,\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"t-listtable-tr1\",\n          children: /*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: 2,\n            children: [startDate, \" ~ \", endDate]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"t-listtable-tr2\",\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: 2,\n            className: \"exam-name\",\n            children: examName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionsList, \"texwb2pYb5fAP2W2x/6qelQVzu0=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = QuestionsList;\nexport default QuestionsList;\nvar _c;\n$RefreshReg$(_c, \"QuestionsList\");","map":{"version":3,"names":["React","useEffect","useState","tb","NavbarT","useNavigate","useLocation","jsxDEV","_jsxDEV","QuestionsList","_s","navigate","currentLocation","examInfo","setExamInfo","storedExamInfo","JSON","parse","localStorage","getItem","currentDate","Date","endDate","removeItem","examName","startDate","handleTableClick","_currentLocation$stat","state","selectedAnswers","children","fileName","_jsxFileName","lineNumber","columnNumber","src","className","alt","onClick","colSpan","_c","$RefreshReg$"],"sources":["C:/Users/smhrd/Documents/GitHub/react/eduwords/eduwords/src/js/questionslist.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport tb from \"../img/tb.png\";\r\nimport \"../css/questionslist.css\";\r\nimport NavbarT from \"../Component/NavbarT\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\n\r\nconst QuestionsList = () => {\r\n  const navigate = useNavigate();\r\n  const currentLocation = useLocation();\r\n  const [examInfo, setExamInfo] = useState({});\r\n\r\n  useEffect(() => {\r\n    const storedExamInfo = JSON.parse(localStorage.getItem(\"examInfo\"));\r\n    if (storedExamInfo) {\r\n      const currentDate = new Date();\r\n      const endDate = new Date(storedExamInfo.endDate);\r\n      if (currentDate <= endDate) {\r\n        setExamInfo(storedExamInfo);\r\n      } else {\r\n        localStorage.removeItem(\"examInfo\"); // 만료된 데이터 삭제\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const { examName, startDate, endDate } = examInfo;\r\n\r\n  const handleTableClick = () => {\r\n    navigate(\"/namelist\", {\r\n      state: {\r\n        selectedAnswers: currentLocation.state?.selectedAnswers,\r\n        examInfo: examInfo,\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavbarT />\r\n      <img src={tb} className=\"tbimg\" alt=\"table\"></img>\r\n      <table className=\"t-listtable\" onClick={handleTableClick}>\r\n        <tbody>\r\n          <tr className=\"t-listtable-tr1\">\r\n            <th colSpan={2}>\r\n              {startDate} ~ {endDate}\r\n            </th>\r\n          </tr>\r\n          <tr className=\"t-listtable-tr2\">\r\n            <td colSpan={2} className=\"exam-name\">\r\n              {examName}\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionsList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\smhrd\\\\Documents\\\\GitHub\\\\react\\\\eduwords\\\\eduwords\\\\src\\\\js\\\\testpaper.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"../css/testpaper.css\";\nimport Navbar from \"../Component/Navbar\";\nimport NavbarT from \"../Component/NavbarT\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst type = sessionStorage.getItem(\"mem_type\");\nconst mem_id = sessionStorage.getItem(\"mem_id\");\nconst mem_name = sessionStorage.getItem(\"mem_name\");\nconst TestPaper = () => {\n  _s();\n  var _location$state, _location$state3;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [selectedAnswers, setSelectedAnswers] = useState({});\n  const [examInfo, setExamInfo] = useState(((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.examInfo) || {});\n  useEffect(() => {\n    var _location$state2;\n    if (!((_location$state2 = location.state) !== null && _location$state2 !== void 0 && _location$state2.examInfo)) {\n      const storedExamInfo = JSON.parse(localStorage.getItem(\"examInfo\"));\n      if (storedExamInfo) {\n        setExamInfo(storedExamInfo);\n      }\n    }\n  }, [(_location$state3 = location.state) === null || _location$state3 === void 0 ? void 0 : _location$state3.examInfo]);\n  const divideIntoColumns = (arr, columns) => {\n    const divided = [];\n    const chunkSize = Math.ceil(arr.length / columns);\n    for (let i = 0; i < columns; i++) {\n      divided.push(arr.slice(i * chunkSize, (i + 1) * chunkSize));\n    }\n    return divided;\n  };\n  const questions = examInfo.selectedQuestions || [];\n  const selectedColumns = divideIntoColumns(questions, 2);\n  const updateSelectedAnswer = (questionId, answer) => {\n    setSelectedAnswers(prevAnswers => ({\n      ...prevAnswers,\n      [questionId]: answer\n    }));\n  };\n  const handleSubmit = () => {\n    navigate(\"/namelist\", {\n      state: {\n        selectedAnswers: selectedAnswers,\n        examInfo: examInfo,\n        mem_id: mem_id,\n        mem_name: mem_name\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [type === \"1\" ? /*#__PURE__*/_jsxDEV(NavbarT, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 23\n    }, this) : /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 37\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"testpaper-title\",\n      children: \"\\xB7 \\uC2DC\\uD5D8 \\uBCF4\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"testpaper-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"testpaper-box\",\n        children: selectedColumns.map((column, columnIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"testpaper-column\",\n          children: column.map((question, questionIndex) => {\n            var _question$options, _question$options2, _question$options3, _question$options4, _question$options5;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"testpaper-question\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [columnIndex * 2 + questionIndex + 1, \". \", question.content]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"\\u2460 \", (_question$options = question.options) === null || _question$options === void 0 ? void 0 : _question$options.option1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"\\u2461 \", (_question$options2 = question.options) === null || _question$options2 === void 0 ? void 0 : _question$options2.option2]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"\\u2462 \", (_question$options3 = question.options) === null || _question$options3 === void 0 ? void 0 : _question$options3.option3]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"\\u2463 \", (_question$options4 = question.options) === null || _question$options4 === void 0 ? void 0 : _question$options4.option4]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"\\u2464 \", (_question$options5 = question.options) === null || _question$options5 === void 0 ? void 0 : _question$options5.option5]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"answer-options\",\n                children: Object.values(question.options).map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `option-button ${selectedAnswers[question.id] === option ? \"selected\" : \"\"}`,\n                  onClick: () => updateSelectedAnswer(question.id, option),\n                  children: option\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 19\n              }, this)]\n            }, question.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this);\n          })\n        }, columnIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"testpaper-btnbox\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"testpaper-btn\",\n        onClick: handleSubmit,\n        children: \"\\uC81C\\uCD9C\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(TestPaper, \"VoXIioXpUkd11k8FzGqXBhNB4HE=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = TestPaper;\nexport default TestPaper;\nvar _c;\n$RefreshReg$(_c, \"TestPaper\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","NavbarT","useNavigate","useLocation","jsxDEV","_jsxDEV","type","sessionStorage","getItem","mem_id","mem_name","TestPaper","_s","_location$state","_location$state3","navigate","location","selectedAnswers","setSelectedAnswers","examInfo","setExamInfo","state","_location$state2","storedExamInfo","JSON","parse","localStorage","divideIntoColumns","arr","columns","divided","chunkSize","Math","ceil","length","i","push","slice","questions","selectedQuestions","selectedColumns","updateSelectedAnswer","questionId","answer","prevAnswers","handleSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","column","columnIndex","question","questionIndex","_question$options","_question$options2","_question$options3","_question$options4","_question$options5","content","options","option1","option2","option3","option4","option5","Object","values","option","index","id","onClick","_c","$RefreshReg$"],"sources":["C:/Users/smhrd/Documents/GitHub/react/eduwords/eduwords/src/js/testpaper.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"../css/testpaper.css\";\r\nimport Navbar from \"../Component/Navbar\";\r\nimport NavbarT from \"../Component/NavbarT\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\n\r\nconst type = sessionStorage.getItem(\"mem_type\");\r\nconst mem_id = sessionStorage.getItem(\"mem_id\");\r\nconst mem_name = sessionStorage.getItem(\"mem_name\");\r\n\r\nconst TestPaper = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [selectedAnswers, setSelectedAnswers] = useState({});\r\n  const [examInfo, setExamInfo] = useState(location.state?.examInfo || {});\r\n\r\n  useEffect(() => {\r\n    if (!location.state?.examInfo) {\r\n      const storedExamInfo = JSON.parse(localStorage.getItem(\"examInfo\"));\r\n      if (storedExamInfo) {\r\n        setExamInfo(storedExamInfo);\r\n      }\r\n    }\r\n  }, [location.state?.examInfo]);\r\n\r\n  const divideIntoColumns = (arr, columns) => {\r\n    const divided = [];\r\n    const chunkSize = Math.ceil(arr.length / columns);\r\n    for (let i = 0; i < columns; i++) {\r\n      divided.push(arr.slice(i * chunkSize, (i + 1) * chunkSize));\r\n    }\r\n    return divided;\r\n  };\r\n\r\n  const questions = examInfo.selectedQuestions || [];\r\n  const selectedColumns = divideIntoColumns(questions, 2);\r\n\r\n  const updateSelectedAnswer = (questionId, answer) => {\r\n    setSelectedAnswers((prevAnswers) => ({\r\n      ...prevAnswers,\r\n      [questionId]: answer,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    navigate(\"/namelist\", {\r\n      state: {\r\n        selectedAnswers: selectedAnswers,\r\n        examInfo: examInfo,\r\n        mem_id: mem_id,\r\n        mem_name: mem_name,\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {type === \"1\" ? <NavbarT /> : <Navbar />}\r\n      <h2 className=\"testpaper-title\">· 시험 보기</h2>\r\n      <div className=\"testpaper-container\">\r\n        <div className=\"testpaper-box\">\r\n          {selectedColumns.map((column, columnIndex) => (\r\n            <div key={columnIndex} className=\"testpaper-column\">\r\n              {column.map((question, questionIndex) => (\r\n                <div key={question.id} className=\"testpaper-question\">\r\n                  <p>\r\n                    {columnIndex * 2 + questionIndex + 1}. {question.content}\r\n                  </p>\r\n                  <p>① {question.options?.option1}</p>\r\n                  <p>② {question.options?.option2}</p>\r\n                  <p>③ {question.options?.option3}</p>\r\n                  <p>④ {question.options?.option4}</p>\r\n                  <p>⑤ {question.options?.option5}</p>\r\n                  <div className=\"answer-options\">\r\n                    {Object.values(question.options).map((option, index) => (\r\n                      <button\r\n                        key={index}\r\n                        className={`option-button ${\r\n                          selectedAnswers[question.id] === option\r\n                            ? \"selected\"\r\n                            : \"\"\r\n                        }`}\r\n                        onClick={() =>\r\n                          updateSelectedAnswer(question.id, option)\r\n                        }\r\n                      >\r\n                        {option}\r\n                      </button>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <br />\r\n      <div className=\"testpaper-btnbox\">\r\n        <button className=\"testpaper-btn\" onClick={handleSubmit}>\r\n          제출하기\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TestPaper;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
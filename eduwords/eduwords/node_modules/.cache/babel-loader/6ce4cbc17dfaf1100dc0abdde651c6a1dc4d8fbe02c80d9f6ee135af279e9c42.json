{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\smhrd\\\\Documents\\\\GitHub\\\\react\\\\eduwords\\\\eduwords\\\\src\\\\Component\\\\Chart.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { Chart, registerables } from \"chart.js\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport \"../css/chart.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(...registerables);\nconst ScoreChart = () => {\n  _s();\n  var _location$state, _location$state2;\n  const type = sessionStorage.getItem(\"mem_type\");\n  const mem_id = sessionStorage.getItem(\"mem_id\");\n  const mem_name = sessionStorage.getItem(\"mem_name\");\n  const {\n    studentId\n  } = useParams();\n  const location = useLocation();\n  const score = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.score) || null;\n  const studentName = ((_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.studentName) || \"학생\";\n  const studentsData = {\n    [studentId]: [{\n      date: \"2024-01-01\",\n      score: 85\n    }, {\n      date: \"2024-02-01\",\n      score: 90\n    }, {\n      date: new Date().toISOString().split(\"T\")[0],\n      score\n    }]\n  };\n  const data = studentsData[studentId] || [];\n\n  // 평균 점수 계산\n  const averageScore = data.reduce((sum, item) => sum + item.score, 0) / data.length;\n  const chartIn = {\n    labels: data.map(item => item.date),\n    datasets: [{\n      label: \"점수\",\n      data: data.map(item => item.score),\n      backgroundColor: \"#239aff\",\n      borderColor: \"#239aff\",\n      borderWidth: 2\n    }]\n  };\n  const options = {\n    scales: {\n      x: {\n        ticks: {\n          maxRotation: 0,\n          minRotation: 0,\n          font: {\n            size: 14\n          },\n          color: \"#239aff\"\n        }\n      },\n      y: {\n        beginAtZero: true,\n        max: 100\n      }\n    },\n    maintainAspectRatio: true\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"chart-title\",\n        children: [\"\\xB7\", studentName, \" \\uD559\\uC0DD \\uC131\\uC801 \\uBCF4\\uAE30\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-box\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart\",\n          children: [/*#__PURE__*/_jsxDEV(Bar, {\n            data: chartIn,\n            options: options\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"chart-h3\",\n            children: [\"\\uD3C9\\uADE0 \\uC810\\uC218: \", averageScore.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(ScoreChart, \"vh7k66QIHi+Y4/fBIpaOuLB+e3U=\", false, function () {\n  return [useParams, useLocation];\n});\n_c = ScoreChart;\nexport default ScoreChart;\nvar _c;\n$RefreshReg$(_c, \"ScoreChart\");","map":{"version":3,"names":["React","Bar","Chart","registerables","useLocation","useParams","jsxDEV","_jsxDEV","register","ScoreChart","_s","_location$state","_location$state2","type","sessionStorage","getItem","mem_id","mem_name","studentId","location","score","state","studentName","studentsData","date","Date","toISOString","split","data","averageScore","reduce","sum","item","length","chartIn","labels","map","datasets","label","backgroundColor","borderColor","borderWidth","options","scales","x","ticks","maxRotation","minRotation","font","size","color","y","beginAtZero","max","maintainAspectRatio","children","className","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/smhrd/Documents/GitHub/react/eduwords/eduwords/src/Component/Chart.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { Chart, registerables } from \"chart.js\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\nimport \"../css/chart.css\";\r\n\r\nChart.register(...registerables);\r\n\r\nconst ScoreChart = () => {\r\n  const type = sessionStorage.getItem(\"mem_type\");\r\n  const mem_id = sessionStorage.getItem(\"mem_id\");\r\n  const mem_name = sessionStorage.getItem(\"mem_name\");\r\n\r\n  const { studentId } = useParams();\r\n  const location = useLocation();\r\n  const score = location.state?.score || null;\r\n  const studentName = location.state?.studentName || \"학생\";\r\n\r\n  const studentsData = {\r\n    [studentId]: [\r\n      { date: \"2024-01-01\", score: 85 },\r\n      { date: \"2024-02-01\", score: 90 },\r\n      { date: new Date().toISOString().split(\"T\")[0], score },\r\n    ],\r\n  };\r\n\r\n  const data = studentsData[studentId] || [];\r\n\r\n  // 평균 점수 계산\r\n  const averageScore =\r\n    data.reduce((sum, item) => sum + item.score, 0) / data.length;\r\n\r\n  const chartIn = {\r\n    labels: data.map((item) => item.date),\r\n    datasets: [\r\n      {\r\n        label: \"점수\",\r\n        data: data.map((item) => item.score),\r\n        backgroundColor: \"#239aff\",\r\n        borderColor: \"#239aff\",\r\n        borderWidth: 2,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      x: {\r\n        ticks: {\r\n          maxRotation: 0,\r\n          minRotation: 0,\r\n          font: {\r\n            size: 14,\r\n          },\r\n          color: \"#239aff\",\r\n        },\r\n      },\r\n      y: {\r\n        beginAtZero: true,\r\n        max: 100,\r\n      },\r\n    },\r\n    maintainAspectRatio: true,\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h2 className=\"chart-title\">·{studentName} 학생 성적 보기</h2>\r\n        <br></br>\r\n        <div className=\"chart-box\">\r\n          <div className=\"chart\">\r\n            <Bar data={chartIn} options={options} />\r\n            <h3 className=\"chart-h3\">평균 점수: {averageScore.toFixed(2)}</h3>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScoreChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
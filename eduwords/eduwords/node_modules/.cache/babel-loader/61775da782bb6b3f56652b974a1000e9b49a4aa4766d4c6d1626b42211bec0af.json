{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\smhrd\\\\Documents\\\\GitHub\\\\react\\\\eduwords\\\\eduwords\\\\src\\\\questionslist.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport tb from \"../src/img/tb.png\";\nimport Navbar from \"./Component/Navbar\";\nimport \"../src/questionslist.css\";\nimport NavbarT from \"./Component/NavbarT\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionsList = () => {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    // 데이터를 받아오는 비동기 함수\n\n    const fetchData = async () => {\n      try {\n        // 데이터를 받아오는 로직 (예: API 호출)\n        const response = await fetch(\"데이터를 받아올 URL\");\n        const jsonData = await response.json();\n        // 받아온 데이터를 state에 저장\n        setData(jsonData);\n      } catch (error) {\n        console.error(\"Error fetching data: \", error);\n      }\n    };\n    fetchData(); // 데이터 받아오기 함수 호출\n  }, []); // useEffect를 한 번만 호출하기 위해 빈 배열 전달\n\n  const getDateRange = (startDate, endDate) => {\n    const dates = [];\n    const currentDate = new Date(startDate);\n    const lastDate = new Date(endDate);\n    while (currentDate <= lastDate) {\n      dates.push(`${currentDate.getFullYear()}-${currentDate.getMonth() + 1}-${currentDate.getDate()}`);\n      currentDate.setDate(currentDate.getDate() + 1);\n    }\n    return dates;\n  };\n\n  // 시작 날짜와 종료 날짜 설정\n  const startDate = \"2024-05-10\";\n  const endDate = \"2024-06-10\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavbarT, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: tb,\n      className: \"tbimg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"t-listtable\",\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        className: \"t-listtable-tr1\",\n        children: /*#__PURE__*/_jsxDEV(\"th\", {\n          colSpan: 2,\n          children: [startDate, \" ~ \", endDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        className: \"t-listtable-tr2\",\n        children: data.map((item, index) => /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"t-listtable-td\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [item.date, \"dd\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [item.name, \"dd\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionsList, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = QuestionsList;\nexport default QuestionsList;\nvar _c;\n$RefreshReg$(_c, \"QuestionsList\");","map":{"version":3,"names":["React","useState","useEffect","tb","Navbar","NavbarT","jsxDEV","_jsxDEV","QuestionsList","_s","data","setData","fetchData","response","fetch","jsonData","json","error","console","getDateRange","startDate","endDate","dates","currentDate","Date","lastDate","push","getFullYear","getMonth","getDate","setDate","children","fileName","_jsxFileName","lineNumber","columnNumber","src","className","colSpan","map","item","index","date","name","_c","$RefreshReg$"],"sources":["C:/Users/smhrd/Documents/GitHub/react/eduwords/eduwords/src/questionslist.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport tb from \"../src/img/tb.png\";\r\nimport Navbar from \"./Component/Navbar\";\r\nimport \"../src/questionslist.css\";\r\nimport NavbarT from \"./Component/NavbarT\";\r\n\r\nconst QuestionsList = () => {\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // 데이터를 받아오는 비동기 함수\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        // 데이터를 받아오는 로직 (예: API 호출)\r\n        const response = await fetch(\"데이터를 받아올 URL\");\r\n        const jsonData = await response.json();\r\n        // 받아온 데이터를 state에 저장\r\n        setData(jsonData);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data: \", error);\r\n      }\r\n    };\r\n\r\n    fetchData(); // 데이터 받아오기 함수 호출\r\n  }, []); // useEffect를 한 번만 호출하기 위해 빈 배열 전달\r\n\r\n  const getDateRange = (startDate, endDate) => {\r\n    const dates = [];\r\n    const currentDate = new Date(startDate);\r\n    const lastDate = new Date(endDate);\r\n\r\n    while (currentDate <= lastDate) {\r\n      dates.push(\r\n        `${currentDate.getFullYear()}-${\r\n          currentDate.getMonth() + 1\r\n        }-${currentDate.getDate()}`\r\n      );\r\n      currentDate.setDate(currentDate.getDate() + 1);\r\n    }\r\n\r\n    return dates;\r\n  };\r\n\r\n  // 시작 날짜와 종료 날짜 설정\r\n  const startDate = \"2024-05-10\";\r\n  const endDate = \"2024-06-10\";\r\n\r\n  return (\r\n    <div>\r\n      <NavbarT />\r\n      <img src={tb} className=\"tbimg\"></img>\r\n      <table className=\"t-listtable\">\r\n        <tr className=\"t-listtable-tr1\">\r\n          <th colSpan={2}>\r\n            {startDate} ~ {endDate}\r\n          </th>\r\n        </tr>\r\n\r\n        <tr className=\"t-listtable-tr2\">\r\n          {data.map((item, index) => (\r\n            <td key={index} className=\"t-listtable-td\">\r\n              <p>{item.date}dd</p>\r\n              <p>{item.name}dd</p>\r\n            </td>\r\n          ))}\r\n        </tr>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionsList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}